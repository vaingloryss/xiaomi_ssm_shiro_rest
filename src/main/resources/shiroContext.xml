<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- 整合mybaits，事务控制等 配置不变 -->
    <!-- 添加配置 -->
    <!-- shiro -->
    <!-- 声明realm -->
    <bean id="customJdbcRealm" class="com.vainglory.realm.CustomJdbcRealm">
        <property name="userService" ref="userServiceImpl"/>
        <property name="roleService" ref="roleServiceImpl"/>
        <property name="permissionService" ref="permissionServiceImpl"/>
        <!-- 此属性如果通过注解注入，则需要将注解加载set方法上，不能用在属性上。
             此属性是父类属性，所以只有在set方法上注入，才能覆盖父类属性值。-->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA-256"/>
                <!-- true means hex encoded, false means base64 encoded -->
                <property name="storedCredentialsHexEncoded" value="false"/>
                <property name="hashIterations" value="1000"/>
            </bean>
        </property>
    </bean>
    <!-- 声明SecurityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customJdbcRealm"/>

        <!--<property name="sessionManager" ref="sessionManager"/>-->
    </bean>
    <!-- 生产SpringShiroFilter
         （ 持有shiro的过滤相关规则，可进行请求的过滤校验，校验请求是否合法 ）
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--核心注入对象-->
        <property name="securityManager" ref="securityManager"/>

        <!--注解开发，不需要一下配置-->
        <!--不再需要，此时如果身份或权限不通过，会抛出异常，需要异常解析器处理-->
        <!--<property name="loginUrl" value="/userController/login"/>
        <property name="unauthorizedUrl" value="/userController/error"/>
        &lt;!&ndash;过滤器链&ndash;&gt;
        <property name="filterChainDefinitions">
            <value>
                /userController/login = anon
                /userController/getScoreList = anon
                /userController/updateScore=authc,perms["scoreItem:update"]
                /userController/deleteScore=authc,perms["scoreItem:delete"]
                /userController/logout=logout
            </value>
        </property>-->
    </bean>

    <!--shiro的session管理相关配置-->
    <!--会话Cookie模板，默认可以省略-->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        &lt;!&ndash;Cookie的key="sid"&ndash;&gt;
        <property name="name" value="JSESSIONID"/>
        &lt;!&ndash;只允许http请求访问cookie&ndash;&gt;
        <property name="httpOnly" value="true"/>
        &lt;!&ndash;cookie的存活时间，-1：表示存活一个会话，单位：秒，默认为-1&ndash;&gt;
        <property name="maxAge" value="-1"/>
    </bean>
    &lt;!&ndash;会话管理器&ndash;&gt;
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">

        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        &lt;!&ndash;session全局超时时间，单位：毫秒，30分钟 默认值为1800000&ndash;&gt;
        <property name="globalSessionTimeout" value="1800000"/>
        &lt;!&ndash;配置监听器，关联给SessionManager&ndash;&gt;
        <property name="sessionListeners">
            <list>
                <bean class="com.vainglory.listener.MySessionListener"/>
            </list>
        </property>
        &lt;!&ndash;开启session过期的检测器，默认开启&ndash;&gt;
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        &lt;!&ndash;检测器运行间隔时间&ndash;&gt;
        <property name="sessionValidationInterval" value="3600000"/>
    </bean>-->
</beans>